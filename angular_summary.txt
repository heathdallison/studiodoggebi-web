angular.json (build options)
{
  "project": "web",
  "outputPath": "dist",
  "browser": "src/main.ts"
}

<index.html> base href: /

=== TEMPLATE: src/app/app.html ===
<sd-masthead />
<sd-nav />
<sd-body />

=== ROUTING: src/app/app.routes.ts ===
export const routes: Routes = [{
    path: '',
    loadComponent: () =>
      import('./components/article-grid/article-grid.component').then(m => m.ArticleGridComponent)
  },
  {
    path: 'article/:slug',
    loadComponent: () =>
      import('./components/article-detail/article-detail.component').then(m => m.ArticleDetailComponent)
  },
  {
    path: '**',
    redirectTo: ''
  }];

=== COMPONENT: src/app/app.ts ===
@Component -> AppComponent
selector: app-root
standalone: true
imports: MastheadComponent, NavComponent, BodyComponent
--- template ---
<sd-masthead />
<sd-nav />
<sd-body />

=== COMPONENT: src/app/components/article-detail/article-detail.component.ts ===
@Component -> ArticleDetailComponent
selector: sd-article-detail
standalone: true
imports: CommonModule
--- template ---
<main class="sd-article-detail">
  <ng-container *ngIf="article as a; else notFound">
    <section>
      <header>
        <h1>{{ a.title }}</h1>
        <p class="excerpt">{{ a.excerpt }}</p>
        <p class="meta">
          <span *ngIf="a.author">By {{ a.author }}</span> |
          <span>{{ a.published }}</span>
        </p>
      </header>

      <figure *ngIf="a.image">
        <img [src]="a.image" [alt]="a.title" />
      </figure>

      <article [innerHTML]="a.content"></article>
    </section>
  </ng-container>

  <ng-template #notFound>
    <section class="not-found">
      <h2>Article not found</h2>
      <p>We couldnâ€™t locate this story. Try a different link or head back to the homepage.</p>
    </section>
  </ng-template>
</main>

=== TEMPLATE: src/app/components/article-grid/article-grid.component.html ===
<section class="article-grid">
  <article *ngFor="let article of articles" class="article-card">
    <img [src]="article.image" [alt]="article.title" />
    <h2>{{ article.title }}</h2>
    <p>{{ article.excerpt }}</p>
    <a [routerLink]="['/article', article.slug]" class="read-more">Read more</a>
  </article>
</section>

=== COMPONENT: src/app/components/article-grid/article-grid.component.ts ===
@Component -> ArticleGridComponent
selector: sd-article-grid
standalone: true
imports: CommonModule, RouterModule
--- template ---
<section class="article-grid">
  <article *ngFor="let article of articles" class="article-card">
    <img [src]="article.image" [alt]="article.title" />
    <h2>{{ article.title }}</h2>
    <p>{{ article.excerpt }}</p>
    <a [routerLink]="['/article', article.slug]" class="read-more">Read more</a>
  </article>
</section>

=== COMPONENT: src/app/components/body/body.component.ts ===
@Component -> BodyComponent
selector: sd-body
standalone: true
imports: CommonModule, 
    ArticleDetailComponent, 
    ArticleGridComponent
--- template ---
<main class="centered">
  <ng-container *ngIf="isArticleView; else grid">
    <sd-article-detail />
  </ng-container>

  <ng-template #grid>
    <sd-article-grid />
  </ng-template>
</main>

=== COMPONENT: src/app/components/masthead/masthead.component.ts ===
@Component -> MastheadComponent
selector: sd-masthead
standalone: true
imports: (none)
--- template ---
<header>
  <h1>{{ masthead }}</h1>
</header>

=== TEMPLATE: src/app/components/nav/nav.component.html ===
<nav class="sd-nav">
  <a
    *ngIf="siteConfig.lsIsActive"
    class="nav-button active"
    href="https://legendarysisters.com"
  >
    Legendary Sisters
  </a>
  <span
    *ngIf="!siteConfig.lsIsActive"
    class="nav-button"
  >
    Legendary Sisters
  </span>

  <a
    *ngIf="siteConfig.sdIsActive"
    class="nav-button active"
    href="https://studiodoggebi.com"
  >
    Studio Doggebi
  </a>
  <span
    *ngIf="!siteConfig.sdIsActive"
    class="nav-button"
  >
    Studio Doggebi
  </span>
</nav>

=== COMPONENT: src/app/components/nav/nav.component.ts ===
@Component -> NavComponent
selector: sd-nav
standalone: true
imports: NgIf
--- template ---
<nav class="sd-nav">
  <a
    *ngIf="siteConfig.lsIsActive"
    class="nav-button active"
    href="https://legendarysisters.com"
  >
    Legendary Sisters
  </a>
  <span
    *ngIf="!siteConfig.lsIsActive"
    class="nav-button"
  >
    Legendary Sisters
  </span>

  <a
    *ngIf="siteConfig.sdIsActive"
    class="nav-button active"
    href="https://studiodoggebi.com"
  >
    Studio Doggebi
  </a>
  <span
    *ngIf="!siteConfig.sdIsActive"
    class="nav-button"
  >
    Studio Doggebi
  </span>
</nav>

=== SERVICE: src/app/services/api.service.ts ===
Service ApiService
constructor: private http: HttpClient
methods:
  getLegendarySisters()
  getRoot()
  getStudioDoggebi()

=== SERVICE: src/app/services/article.service.ts ===
Service ArticleService
constructor: (none)
methods:
  getArticleBySlug(brand: string, slug: string): ArticleDetail | null 
  getArticles(brand: string): ArticleSummary[]

=== SERVICE: src/app/services/content.service.ts ===
Service ContentService
constructor: (none)
methods:
  getFeed(key: 'onetsy' | 'wip'): ContentItem[]

=== SERVICE: src/app/services/layout-info.service.ts ===
Service LayoutInfoService
constructor: 
methods:
  (none)